/* ==========================================================================
   #FORMS
   ========================================================================== */

/**
 * Long-form comment.
 *
 * If you’d like to create a new Sass file for the project, simply copy and
 * paste this one and fill it in like for like.
 *
 * This spans multiple lines and is also constrained to no longer than 80
 * characters in width.
 *
 * 1. Provide line comments like this.
 */





/* Inputs
   ========================================================================== */

.c-input {
  @include font-size(14px);
  color: $color-form;
  padding-right: 5px;
  padding-left: 5px;
  border: 1px solid $color-form-border;
  width: 345px;
  max-width: 100%;

  &:active,
  &:focus {
    outline: none;
    border-color: $color-form-border-focus;
  }

  &.is-error {
    border-color: $color-form-border-error;
  }

}





/* Checkboxes
 *
 * We make faux checkboxes (and radios) by using the `:checked` pseudo selector:
 * when a hidden `input` is activated, we style an adjacent `span`.
 *
 * This technique comes with a few caveats and constraints: the `input` MUST be
 * wrapped in a `label` element in order for it to be indirectly triggered, and
 * we need an empty `span` in the HTML to which we actually apply our styles.
   ========================================================================== */

.c-checkbox {
  @include font-size(14px);
  font-weight: normal;
}

  /**
   * 1. Hide the actual input…
   * 2. …and remove it from document flow.
   */
  .c-checkbox__input {
    opacity: 0; /* [1] */
    position: absolute; /* [2] */
  }

  .c-checkbox__faux {
    display: inline-block;
    margin-right: $global-spacing-unit-tiny;
    font-size: 20px;
    width: 1em;
    height: 1em;
    background-color: $color-checkbox-bg;
    vertical-align: middle;
    border: 1px solid $color-form-border;
    transition: 0.2s;

    /**
     * Once the `input` is checked, let’s style up the faux input next to it.
     */
    .c-checkbox__input:checked + & {
      background-color: $color-checkbox-bg-checked;
      position: relative;
      border-color: transparent;

      &::after {
        content: "";
        position: absolute;
        top: 5px;
        left: 4px;
        width: 10px;
        height: 5px;
        border: 1px solid transparent;
        border-bottom-color: white;
        border-left-color: white;
        transform: rotate(-45deg)
      }

    }

    /**
     * When someone is interacting with the input, highlight them.
     */
    .c-checkbox__input:active + &,
    .c-checkbox__input:focus + & {
      border-color: $color-form-border-focus;
    }

    /**
     * If it’s a radio button, let’s style it slightly differently.
     */
    .c-checkbox--radio > & {
      border-radius: 100%;
    }

    /**
     * Checked radio boxes look very different to their checkbox counterparts.
     */
    .c-checkbox--radio > .c-checkbox__input:checked + &::after {
      top: 5px;
      left: 5px;
      border: none;
      border-radius: 100%;
      width: 8px;
      height: 8px;
      background-color: white;
      transform: none;
    }

  }





.c-other-block {
  font-weight: bold; /* [1] */
}
